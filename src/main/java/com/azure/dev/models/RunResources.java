// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The RunResources model. */
@Fluent
public final class RunResources {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(RunResources.class);

    /*
     * Dictionary of <RepositoryResource>
     */
    @JsonProperty(value = "repositories")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, RepositoryResource> repositories;

    /**
     * Get the repositories property: Dictionary of &lt;RepositoryResource&gt;.
     *
     * @return the repositories value.
     */
    public Map<String, RepositoryResource> repositories() {
        return this.repositories;
    }

    /**
     * Set the repositories property: Dictionary of &lt;RepositoryResource&gt;.
     *
     * @param repositories the repositories value to set.
     * @return the RunResources object itself.
     */
    public RunResources withRepositories(Map<String, RepositoryResource> repositories) {
        this.repositories = repositories;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (repositories() != null) {
            repositories()
                .values()
                .forEach(
                    e -> {
                        if (e != null) {
                            e.validate();
                        }
                    });
        }
    }
}
