// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.implementation;

import com.azure.dev.fluent.models.BuildControllerInner;
import com.azure.dev.fluent.models.XamlBuildDefinitionInner;
import com.azure.dev.models.BuildController;
import com.azure.dev.models.BuildReason;
import com.azure.dev.models.BuildRepository;
import com.azure.dev.models.DefinitionQueueStatus;
import com.azure.dev.models.DefinitionTriggerType;
import com.azure.dev.models.DefinitionType;
import com.azure.dev.models.ReferenceLinks;
import com.azure.dev.models.TeamProjectReference;
import com.azure.dev.models.XamlBuildDefinition;
import com.azure.dev.models.XamlBuildReference;
import java.time.OffsetDateTime;

public final class XamlBuildDefinitionImpl implements XamlBuildDefinition {
    private XamlBuildDefinitionInner innerObject;

    private final com.azure.dev.DevManager serviceManager;

    XamlBuildDefinitionImpl(XamlBuildDefinitionInner innerObject, com.azure.dev.DevManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public OffsetDateTime createdDate() {
        return this.innerModel().createdDate();
    }

    public Integer id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String path() {
        return this.innerModel().path();
    }

    public TeamProjectReference project() {
        return this.innerModel().project();
    }

    public DefinitionQueueStatus queueStatus() {
        return this.innerModel().queueStatus();
    }

    public Integer revision() {
        return this.innerModel().revision();
    }

    public DefinitionType type() {
        return this.innerModel().type();
    }

    public String uri() {
        return this.innerModel().uri();
    }

    public String url() {
        return this.innerModel().url();
    }

    public ReferenceLinks links() {
        return this.innerModel().links();
    }

    public Integer batchSize() {
        return this.innerModel().batchSize();
    }

    public String buildArgs() {
        return this.innerModel().buildArgs();
    }

    public Integer continuousIntegrationQuietPeriod() {
        return this.innerModel().continuousIntegrationQuietPeriod();
    }

    public BuildController controller() {
        BuildControllerInner inner = this.innerModel().controller();
        if (inner != null) {
            return new BuildControllerImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public OffsetDateTime createdOn() {
        return this.innerModel().createdOn();
    }

    public String defaultDropLocation() {
        return this.innerModel().defaultDropLocation();
    }

    public String description() {
        return this.innerModel().description();
    }

    public XamlBuildReference lastBuild() {
        return this.innerModel().lastBuild();
    }

    public BuildRepository repository() {
        return this.innerModel().repository();
    }

    public BuildReason supportedReasons() {
        return this.innerModel().supportedReasons();
    }

    public DefinitionTriggerType triggerType() {
        return this.innerModel().triggerType();
    }

    public XamlBuildDefinitionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.dev.DevManager manager() {
        return this.serviceManager;
    }
}
