// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The BuildSummary model. */
@Fluent
public final class BuildSummary {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(BuildSummary.class);

    /*
     * The build property.
     */
    @JsonProperty(value = "build")
    private XamlBuildReference build;

    /*
     * The finishTime property.
     */
    @JsonProperty(value = "finishTime")
    private OffsetDateTime finishTime;

    /*
     * The keepForever property.
     */
    @JsonProperty(value = "keepForever")
    private Boolean keepForever;

    /*
     * The quality property.
     */
    @JsonProperty(value = "quality")
    private String quality;

    /*
     * The reason that the build was created.
     */
    @JsonProperty(value = "reason")
    private BuildReason reason;

    /*
     * The requestedFor property.
     */
    @JsonProperty(value = "requestedFor")
    private IdentityRef requestedFor;

    /*
     * The startTime property.
     */
    @JsonProperty(value = "startTime")
    private OffsetDateTime startTime;

    /*
     * The status of the build.
     */
    @JsonProperty(value = "status")
    private BuildStatus status;

    /**
     * Get the build property: The build property.
     *
     * @return the build value.
     */
    public XamlBuildReference build() {
        return this.build;
    }

    /**
     * Set the build property: The build property.
     *
     * @param build the build value to set.
     * @return the BuildSummary object itself.
     */
    public BuildSummary withBuild(XamlBuildReference build) {
        this.build = build;
        return this;
    }

    /**
     * Get the finishTime property: The finishTime property.
     *
     * @return the finishTime value.
     */
    public OffsetDateTime finishTime() {
        return this.finishTime;
    }

    /**
     * Set the finishTime property: The finishTime property.
     *
     * @param finishTime the finishTime value to set.
     * @return the BuildSummary object itself.
     */
    public BuildSummary withFinishTime(OffsetDateTime finishTime) {
        this.finishTime = finishTime;
        return this;
    }

    /**
     * Get the keepForever property: The keepForever property.
     *
     * @return the keepForever value.
     */
    public Boolean keepForever() {
        return this.keepForever;
    }

    /**
     * Set the keepForever property: The keepForever property.
     *
     * @param keepForever the keepForever value to set.
     * @return the BuildSummary object itself.
     */
    public BuildSummary withKeepForever(Boolean keepForever) {
        this.keepForever = keepForever;
        return this;
    }

    /**
     * Get the quality property: The quality property.
     *
     * @return the quality value.
     */
    public String quality() {
        return this.quality;
    }

    /**
     * Set the quality property: The quality property.
     *
     * @param quality the quality value to set.
     * @return the BuildSummary object itself.
     */
    public BuildSummary withQuality(String quality) {
        this.quality = quality;
        return this;
    }

    /**
     * Get the reason property: The reason that the build was created.
     *
     * @return the reason value.
     */
    public BuildReason reason() {
        return this.reason;
    }

    /**
     * Set the reason property: The reason that the build was created.
     *
     * @param reason the reason value to set.
     * @return the BuildSummary object itself.
     */
    public BuildSummary withReason(BuildReason reason) {
        this.reason = reason;
        return this;
    }

    /**
     * Get the requestedFor property: The requestedFor property.
     *
     * @return the requestedFor value.
     */
    public IdentityRef requestedFor() {
        return this.requestedFor;
    }

    /**
     * Set the requestedFor property: The requestedFor property.
     *
     * @param requestedFor the requestedFor value to set.
     * @return the BuildSummary object itself.
     */
    public BuildSummary withRequestedFor(IdentityRef requestedFor) {
        this.requestedFor = requestedFor;
        return this;
    }

    /**
     * Get the startTime property: The startTime property.
     *
     * @return the startTime value.
     */
    public OffsetDateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the startTime property: The startTime property.
     *
     * @param startTime the startTime value to set.
     * @return the BuildSummary object itself.
     */
    public BuildSummary withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get the status property: The status of the build.
     *
     * @return the status value.
     */
    public BuildStatus status() {
        return this.status;
    }

    /**
     * Set the status property: The status of the build.
     *
     * @param status the status value to set.
     * @return the BuildSummary object itself.
     */
    public BuildSummary withStatus(BuildStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (build() != null) {
            build().validate();
        }
        if (requestedFor() != null) {
            requestedFor().validate();
        }
    }
}
