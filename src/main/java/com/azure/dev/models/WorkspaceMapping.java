// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Mapping for a workspace. */
@Fluent
public final class WorkspaceMapping {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(WorkspaceMapping.class);

    /*
     * Uri of the associated definition
     */
    @JsonProperty(value = "definitionUri")
    private String definitionUri;

    /*
     * Depth of this mapping
     */
    @JsonProperty(value = "depth")
    private Integer depth;

    /*
     * local location of the definition
     */
    @JsonProperty(value = "localItem")
    private String localItem;

    /*
     * type of workspace mapping
     */
    @JsonProperty(value = "mappingType")
    private WorkspaceMappingType mappingType;

    /*
     * Server location of the definition
     */
    @JsonProperty(value = "serverItem")
    private String serverItem;

    /*
     * Id of the workspace
     */
    @JsonProperty(value = "workspaceId")
    private Integer workspaceId;

    /**
     * Get the definitionUri property: Uri of the associated definition.
     *
     * @return the definitionUri value.
     */
    public String definitionUri() {
        return this.definitionUri;
    }

    /**
     * Set the definitionUri property: Uri of the associated definition.
     *
     * @param definitionUri the definitionUri value to set.
     * @return the WorkspaceMapping object itself.
     */
    public WorkspaceMapping withDefinitionUri(String definitionUri) {
        this.definitionUri = definitionUri;
        return this;
    }

    /**
     * Get the depth property: Depth of this mapping.
     *
     * @return the depth value.
     */
    public Integer depth() {
        return this.depth;
    }

    /**
     * Set the depth property: Depth of this mapping.
     *
     * @param depth the depth value to set.
     * @return the WorkspaceMapping object itself.
     */
    public WorkspaceMapping withDepth(Integer depth) {
        this.depth = depth;
        return this;
    }

    /**
     * Get the localItem property: local location of the definition.
     *
     * @return the localItem value.
     */
    public String localItem() {
        return this.localItem;
    }

    /**
     * Set the localItem property: local location of the definition.
     *
     * @param localItem the localItem value to set.
     * @return the WorkspaceMapping object itself.
     */
    public WorkspaceMapping withLocalItem(String localItem) {
        this.localItem = localItem;
        return this;
    }

    /**
     * Get the mappingType property: type of workspace mapping.
     *
     * @return the mappingType value.
     */
    public WorkspaceMappingType mappingType() {
        return this.mappingType;
    }

    /**
     * Set the mappingType property: type of workspace mapping.
     *
     * @param mappingType the mappingType value to set.
     * @return the WorkspaceMapping object itself.
     */
    public WorkspaceMapping withMappingType(WorkspaceMappingType mappingType) {
        this.mappingType = mappingType;
        return this;
    }

    /**
     * Get the serverItem property: Server location of the definition.
     *
     * @return the serverItem value.
     */
    public String serverItem() {
        return this.serverItem;
    }

    /**
     * Set the serverItem property: Server location of the definition.
     *
     * @param serverItem the serverItem value to set.
     * @return the WorkspaceMapping object itself.
     */
    public WorkspaceMapping withServerItem(String serverItem) {
        this.serverItem = serverItem;
        return this;
    }

    /**
     * Get the workspaceId property: Id of the workspace.
     *
     * @return the workspaceId value.
     */
    public Integer workspaceId() {
        return this.workspaceId;
    }

    /**
     * Set the workspaceId property: Id of the workspace.
     *
     * @param workspaceId the workspaceId value to set.
     * @return the WorkspaceMapping object itself.
     */
    public WorkspaceMapping withWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
