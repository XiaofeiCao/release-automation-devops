// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** The class to represent a collection of REST reference links. */
@Fluent
public final class ReferenceLinks {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ReferenceLinks.class);

    /*
     * The readonly view of the links.  Because Reference links are readonly,
     * we only want to expose them as read only.
     */
    @JsonProperty(value = "links")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, Object> links;

    /**
     * Get the links property: The readonly view of the links. Because Reference links are readonly, we only want to
     * expose them as read only.
     *
     * @return the links value.
     */
    public Map<String, Object> links() {
        return this.links;
    }

    /**
     * Set the links property: The readonly view of the links. Because Reference links are readonly, we only want to
     * expose them as read only.
     *
     * @param links the links value to set.
     * @return the ReferenceLinks object itself.
     */
    public ReferenceLinks withLinks(Map<String, Object> links) {
        this.links = links;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
