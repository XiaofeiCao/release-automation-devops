// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.dev.fluent.models.BuildInner;
import com.azure.dev.fluent.models.BuildUpdatedEventInner;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The BuildTagsAddedEvent model. */
@Fluent
public final class BuildTagsAddedEvent extends BuildUpdatedEventInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(BuildTagsAddedEvent.class);

    /*
     * The allTags property.
     */
    @JsonProperty(value = "allTags")
    private List<String> allTags;

    /*
     * The newTags property.
     */
    @JsonProperty(value = "newTags")
    private List<String> newTags;

    /**
     * Get the allTags property: The allTags property.
     *
     * @return the allTags value.
     */
    public List<String> allTags() {
        return this.allTags;
    }

    /**
     * Set the allTags property: The allTags property.
     *
     * @param allTags the allTags value to set.
     * @return the BuildTagsAddedEvent object itself.
     */
    public BuildTagsAddedEvent withAllTags(List<String> allTags) {
        this.allTags = allTags;
        return this;
    }

    /**
     * Get the newTags property: The newTags property.
     *
     * @return the newTags value.
     */
    public List<String> newTags() {
        return this.newTags;
    }

    /**
     * Set the newTags property: The newTags property.
     *
     * @param newTags the newTags value to set.
     * @return the BuildTagsAddedEvent object itself.
     */
    public BuildTagsAddedEvent withNewTags(List<String> newTags) {
        this.newTags = newTags;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public BuildTagsAddedEvent withBuild(BuildInner build) {
        super.withBuild(build);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public BuildTagsAddedEvent withBuildId(Integer buildId) {
        super.withBuildId(buildId);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
