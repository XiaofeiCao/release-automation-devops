// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The TimelineRecordsUpdatedEvent model. */
@Fluent
public final class TimelineRecordsUpdatedEvent extends RealtimeBuildEvent {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TimelineRecordsUpdatedEvent.class);

    /*
     * The timelineRecords property.
     */
    @JsonProperty(value = "timelineRecords")
    private List<TimelineRecord> timelineRecords;

    /**
     * Get the timelineRecords property: The timelineRecords property.
     *
     * @return the timelineRecords value.
     */
    public List<TimelineRecord> timelineRecords() {
        return this.timelineRecords;
    }

    /**
     * Set the timelineRecords property: The timelineRecords property.
     *
     * @param timelineRecords the timelineRecords value to set.
     * @return the TimelineRecordsUpdatedEvent object itself.
     */
    public TimelineRecordsUpdatedEvent withTimelineRecords(List<TimelineRecord> timelineRecords) {
        this.timelineRecords = timelineRecords;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public TimelineRecordsUpdatedEvent withBuildId(Integer buildId) {
        super.withBuildId(buildId);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (timelineRecords() != null) {
            timelineRecords().forEach(e -> e.validate());
        }
    }
}
