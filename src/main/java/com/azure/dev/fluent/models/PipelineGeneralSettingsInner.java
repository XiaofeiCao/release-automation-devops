// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Contains pipeline general settings. */
@Fluent
public final class PipelineGeneralSettingsInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(PipelineGeneralSettingsInner.class);

    /*
     * If enabled, scope of access for all pipelines reduces to the current
     * project.
     */
    @JsonProperty(value = "enforceJobAuthScope")
    private Boolean enforceJobAuthScope;

    /*
     * Restricts the scope of access for all pipelines to only repositories
     * explicitly referenced by the pipeline.
     */
    @JsonProperty(value = "enforceReferencedRepoScopedToken")
    private Boolean enforceReferencedRepoScopedToken;

    /*
     * If enabled, only those variables that are explicitly marked as "Settable
     * at queue time" can be set at queue time.
     */
    @JsonProperty(value = "enforceSettableVar")
    private Boolean enforceSettableVar;

    /*
     * Allows pipelines to record metadata.
     */
    @JsonProperty(value = "publishPipelineMetadata")
    private Boolean publishPipelineMetadata;

    /*
     * Anonymous users can access the status badge API for all pipelines unless
     * this option is enabled.
     */
    @JsonProperty(value = "statusBadgesArePrivate")
    private Boolean statusBadgesArePrivate;

    /**
     * Get the enforceJobAuthScope property: If enabled, scope of access for all pipelines reduces to the current
     * project.
     *
     * @return the enforceJobAuthScope value.
     */
    public Boolean enforceJobAuthScope() {
        return this.enforceJobAuthScope;
    }

    /**
     * Set the enforceJobAuthScope property: If enabled, scope of access for all pipelines reduces to the current
     * project.
     *
     * @param enforceJobAuthScope the enforceJobAuthScope value to set.
     * @return the PipelineGeneralSettingsInner object itself.
     */
    public PipelineGeneralSettingsInner withEnforceJobAuthScope(Boolean enforceJobAuthScope) {
        this.enforceJobAuthScope = enforceJobAuthScope;
        return this;
    }

    /**
     * Get the enforceReferencedRepoScopedToken property: Restricts the scope of access for all pipelines to only
     * repositories explicitly referenced by the pipeline.
     *
     * @return the enforceReferencedRepoScopedToken value.
     */
    public Boolean enforceReferencedRepoScopedToken() {
        return this.enforceReferencedRepoScopedToken;
    }

    /**
     * Set the enforceReferencedRepoScopedToken property: Restricts the scope of access for all pipelines to only
     * repositories explicitly referenced by the pipeline.
     *
     * @param enforceReferencedRepoScopedToken the enforceReferencedRepoScopedToken value to set.
     * @return the PipelineGeneralSettingsInner object itself.
     */
    public PipelineGeneralSettingsInner withEnforceReferencedRepoScopedToken(Boolean enforceReferencedRepoScopedToken) {
        this.enforceReferencedRepoScopedToken = enforceReferencedRepoScopedToken;
        return this;
    }

    /**
     * Get the enforceSettableVar property: If enabled, only those variables that are explicitly marked as "Settable at
     * queue time" can be set at queue time.
     *
     * @return the enforceSettableVar value.
     */
    public Boolean enforceSettableVar() {
        return this.enforceSettableVar;
    }

    /**
     * Set the enforceSettableVar property: If enabled, only those variables that are explicitly marked as "Settable at
     * queue time" can be set at queue time.
     *
     * @param enforceSettableVar the enforceSettableVar value to set.
     * @return the PipelineGeneralSettingsInner object itself.
     */
    public PipelineGeneralSettingsInner withEnforceSettableVar(Boolean enforceSettableVar) {
        this.enforceSettableVar = enforceSettableVar;
        return this;
    }

    /**
     * Get the publishPipelineMetadata property: Allows pipelines to record metadata.
     *
     * @return the publishPipelineMetadata value.
     */
    public Boolean publishPipelineMetadata() {
        return this.publishPipelineMetadata;
    }

    /**
     * Set the publishPipelineMetadata property: Allows pipelines to record metadata.
     *
     * @param publishPipelineMetadata the publishPipelineMetadata value to set.
     * @return the PipelineGeneralSettingsInner object itself.
     */
    public PipelineGeneralSettingsInner withPublishPipelineMetadata(Boolean publishPipelineMetadata) {
        this.publishPipelineMetadata = publishPipelineMetadata;
        return this;
    }

    /**
     * Get the statusBadgesArePrivate property: Anonymous users can access the status badge API for all pipelines unless
     * this option is enabled.
     *
     * @return the statusBadgesArePrivate value.
     */
    public Boolean statusBadgesArePrivate() {
        return this.statusBadgesArePrivate;
    }

    /**
     * Set the statusBadgesArePrivate property: Anonymous users can access the status badge API for all pipelines unless
     * this option is enabled.
     *
     * @param statusBadgesArePrivate the statusBadgesArePrivate value to set.
     * @return the PipelineGeneralSettingsInner object itself.
     */
    public PipelineGeneralSettingsInner withStatusBadgesArePrivate(Boolean statusBadgesArePrivate) {
        this.statusBadgesArePrivate = statusBadgesArePrivate;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
